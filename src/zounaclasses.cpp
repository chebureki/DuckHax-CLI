#include "zounaclasses.h"

#include <iostream>

//Keep the indices the same as in ZounaClasses!
const char* ZounaClassesNames[] ={
    "UNKNOWN",
    "DPC",
    "GameBreakable_Z",
    "TONNEAU",
	"TONNEAU_INCLINE",
	"ROCK_BREAK",
	"ROCK",
	"C_DUCK",
	"A_DUCK",
	"A_CROCO",
	"F_DUCK",
	"F_BILL",
	"F_ED",
	"F_WADDLE",
	"F_GROCER",
	"F_BEV",
	"F_BEVOUSKY",
	"F_OLY",
	"F_CLAIRE",
	"F_DRILL",
	"F_CECIL",
	"F_DMV_OWNER",
	"F_FLORIST",
	"F_NURSE",
	"F_CROSS",
	"F_TEACHER",
	"F_ENFANT",
	"F_FRED",
	"F_RAOUL",
	"F_LIMO",
	"F_CROCO",
	"F_SNAPPY",
	"F_ALDO",
	"F_GATOR_1",
	"F_GATOR_2",
	"F_GATOR_3",
	"Player_Z",
	"P_Bill",
	"P_Aldo",
	"P_ED",
	"P_OLY",
	"P_WADDLE",
	"P_BEV",
	"P_CLAIRE",
	"P_CECIL",
	"P_FRED",
	"P_FLORIST",
	"P_GROCER",
	"P_DRILL",
	"P_NURSE",
	"P_TEACHER",
	"P_SNAPPY",
	"V_DUCK",
	"V_VESPA",
	"V_VESPA02",
	"V_VESPA03",
	"V_VESPA04",
	"V_VESPA05",
	"V_VOITURE",
	"V_RAOUL",
	"V_SKATE",
	"IT_BALL",
	"IT_PLANE",
	"IT_PLANE02",
	"IT_PLANE03",
	"IT_FEATHER",
	"IT_SOUND",
	"DUCK_Agent_Z",
	"ObjectAgent_Z",
	"IT_COLLECT",
	"IT_ICE",
	"IT_DUCKMASK",
	"IT_ASPIRIN",
	"IT_ROUE",
	"IT_MOTEUR",
	"IT_PHARE",
	"IT_COLLECT_MULTI",
	"IT_EGG",
	"IT_FLAG",
	"IT_CHRONO",
	"IT_ICECREAM",
	"IT_PETUNIA",
	"IT_TIMER",
	"IT_QUEST",
	"BAJA_GATE_Z",
	"BAJA_GATE_RotZ",
	"IT_Cercle_End",
	"BAJA_BALLON_Z",
	"BAJA_CERCLE_Z",
	"PointerAgent_Z",
	"INT_POINTEUR",
	"CameraSampleAgent_Z",
	"RtcScriptAgent_Z",
	"VolRtcInGame_Z",
	"MissionVolumeAgent_Z",
	"StartMissionVolumeAgent_Z",
	"EndMissionVolumeAgent_Z",
	"VOLUME_FOULE",
	"LogicAgent_Z",
	"MenuLogicAgent_Z",
	"GameLogicAgent_Z",
	"EpisodeLogicAgent_Z",
	"LevelAgent_Z",
	"StreamGameAgent_Z",
	"PlayerMove_Z",
	"CreaturesMove_Z",
	"FriendsMove_Z",
	"AnonymMove_Z",
	"ProjectileThrow",
	"CameraSample_Z",
	"PhysicObj_Z",
	"IT_BallMove_Z",
	"IT_PlaneMove_Z",
	"IT_FEATHERMOVE_Z",
	"V_DUCK_Move_Z",
	"AnonymMgr_Z",
	"ProGroundMgr_Z",
	"FeatherManager_Z",
	"DUCK_SoundMgr_Z",
	"Duck_ParticleMgr_Z",
	"DuckInGameDatas_Z",
	"GlobalInGameDatas_Z",
	"MenuInGameDatas_Z",
	"EpisodeInGameDatas_Z",
	"InGamePlayer_Z",
	"LoadingDraw_Z",
	"PaddleChecker_Z",
	"DayCycle_Z",
	"TimerManipulator_Z",
	"CountDownManipulator_Z",
	"PointerManipulator_Z",
	"IT_CollectMove_Z",
	"RtcScripted_Z",
	"MemoryCardManager_Z",
	"VibrationManager_Z",
	"MusicManager_Z",
	"Agent_Z",
	"StreamAgent_Z",
	"AnimatedMsgAgent_Z",
	"AnimatedAgent_Z",
	"LodDynAgent_Z",
	"SkinAgent_Z",
	"MovingAgent_Z",
	"Throwable_Z",
	"LodAgent_Z",
	"Breakable_Z",
	"CameraAgent_Z",
	"RtcAgent_Z",
	"VolumeAgent_Z",
	"SubLevelVolumeAgent_Z",
	"ParticlesAgent_Z",
	"ResourceObject_Z",
	"World_Z",
	"SubWorld_Z",
	"Object_Z",
	"ObjectData_Z",
	"Points_Z",
	"Node_Z",
	"Bitmap_Z",
	"MaterialAnim_Z",
	"Spline_Z",
	"SplineZone_Z",
	"Occluder_Z",
	"CameraZone_Z",
	"Light_Z",
	"LightData_Z",
	"HFog_Z",
	"Omni_Z",
	"Emiter_Z",
	"CollisionVol_Z",
	"Animation_Z",
	"AnimFrame_Z",
	"Camera_Z",
	"Game_Z",
	"GameObj_Z",
	"MaterialObj_Z",
	"Rtc_Z",
	"Graph_Z",
	"UserDefine_Z",
	"PointsData_Z",
	"Txt_Z",
	"Manipulator_Z",
	"ManipulatorDraw_Z",
	"PlayAnim_Z",
	"DynamicAnim_Z",
	"DynamicAnim2_Z",
	"SequenceAnim_Z",
	"SequenceMixAnim_Z",
	"CameraUser_Z",
	"CameraEngine_Z",
	"CameraEngineZone_Z",
	"ObjectMove_Z",
	"ObjectsMove_Z",
	"ObjectsBounce_Z",
	"ObjectsBreak_Z",
	"ObjectThrow_Z",
	"LodMove_Z",
	"VehiculeMove_Z",
	"ObjectsGame_Z",
	"Menu_Z",
	"Menu3D_Z",
	"Menu2D_Z",
	"RtcPlayer_Z",
	"Ghost_Z",
	"SelfRunning_Z",
	"InGameDatas_Z",
	"PlayParticles_Z",
	"SuperSpray_Z",
	"InGameObjectsManipulator_Z",
	"StreamFile_Z",
	"ConsoleInterp_Z",
	"Material_Z",
	"Skin_Z",
	"Skel_Z",
	"Mesh_Z",
	"MeshData_Z",
	"Lod_Z",
	"LodData_Z",
	"RotShape_Z",
	"RotShapeData_Z",
	"Sound_Z",
	"Surface_Z",
	"SurfaceDatas_Z",
	"Particles_Z",
	"ParticlesData_Z",
	"Warp_Z",
	"XMObject_Z",
	"InGameObjects_Z"
};

//TODO: this seems redudant, but I just copied it from the game-rom lol
const uint8_t hashSet1[] = {
    0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0x0E,
    0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
    0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24,
	0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,
	0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x61, 0x62, 0x63, 0x64, 0x65,
	0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70,
	0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x5B,
	0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
	0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71,
	0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C,
	0x7D, 0x7E, 0x7F, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
	0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92,
	0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D,
	0x9E, 0x9F, 0x0A0, 0x0A1, 0x0A2, 0x0A3, 0x0A4, 0x0A5, 0x0A6,
	0x0A7, 0x0A8, 0x0A9, 0x0AA, 0x0AB, 0x0AC, 0x0AD, 0x0AE, 0x0AF,
	0x0B0, 0x0B1, 0x0B2, 0x0B3, 0x0B4, 0x0B5, 0x0B6, 0x0B7, 0x0B8,
	0x0B9, 0x0BA, 0x0BB, 0x0BC, 0x0BD, 0x0BE, 0x0BF, 0x0C0, 0x0C1,
	0x0C2, 0x0C3, 0x0C4, 0x0C5, 0x0C6, 0x0C7, 0x0C8, 0x0C9, 0x0CA,
	0x0CB, 0x0CC, 0x0CD, 0x0CE, 0x0CF, 0x0D0, 0x0D1, 0x0D2, 0x0D3,
	0x0D4, 0x0D5, 0x0D6, 0x0D7, 0x0D8, 0x0D9, 0x0DA, 0x0DB, 0x0DC,
	0x0DD, 0x0DE, 0x0DF, 0x0E0, 0x0E1, 0x0E2, 0x0E3, 0x0E4, 0x0E5,
	0x0E6, 0x0E7, 0x0E8, 0x0E9, 0x0EA, 0x0EB, 0x0EC, 0x0ED, 0x0EE,
	0x0EF, 0x0F0, 0x0F1, 0x0F2, 0x0F3, 0x0F4, 0x0F5, 0x0F6, 0x0F7,
	0x0F8, 0x0F9, 0x0FA, 0x0FB, 0x0FC, 0x0FD, 0x0FE, 0x0FF,
};

const uint32_t hashSet2[] = {
    0, 0x4C11DB7, 0x9823B6E, 0x0D4326D9, 0x130476DC, 0x17C56B6B, 0x1A864DB2, 0x1E475005,
	0x2608EDB8, 0x22C9F00F, 0x2F8AD6D6, 0x2B4BCB61, 0x350C9B64, 0x31CD86D3, 0x3C8EA00A,
	0x384FBDBD, 0x4C11DB70, 0x48D0C6C7, 0x4593E01E, 0x4152FDA9, 0x5F15ADAC, 0x5BD4B01B,
	0x569796C2, 0x52568B75, 0x6A1936C8, 0x6ED82B7F, 0x639B0DA6, 0x675A1011, 0x791D4014,
	0x7DDC5DA3, 0x709F7B7A, 0x745E66CD, 0x9823B6E0, 0x9CE2AB57, 0x91A18D8E, 0x95609039,
	0x8B27C03C, 0x8FE6DD8B, 0x82A5FB52, 0x8664E6E5, 0x0BE2B5B58, 0x0BAEA46EF,
	0x0B7A96036, 0x0B3687D81, 0x0AD2F2D84, 0x0A9EE3033, 0x0A4AD16EA, 0x0A06C0B5D,
	0x0D4326D90, 0x0D0F37027, 0x0DDB056FE, 0x0D9714B49, 0x0C7361B4C, 0x0C3F706FB,
	0x0CEB42022, 0x0CA753D95, 0x0F23A8028, 0x0F6FB9D9F, 0x0FBB8BB46, 0x0FF79A6F1,
	0x0E13EF6F4, 0x0E5FFEB43, 0x0E8BCCD9A, 0x0EC7DD02D, 0x34867077, 0x30476DC0,
	0x3D044B19, 0x39C556AE, 0x278206AB, 0x23431B1C, 0x2E003DC5, 0x2AC12072, 0x128E9DCF,
	0x164F8078, 0x1B0CA6A1, 0x1FCDBB16, 0x18AEB13, 0x54BF6A4, 0x808D07D, 0x0CC9CDCA,
	0x7897AB07, 0x7C56B6B0, 0x71159069, 0x75D48DDE, 0x6B93DDDB, 0x6F52C06C, 0x6211E6B5,
	0x66D0FB02, 0x5E9F46BF, 0x5A5E5B08, 0x571D7DD1, 0x53DC6066, 0x4D9B3063, 0x495A2DD4,
	0x44190B0D, 0x40D816BA, 0x0ACA5C697, 0x0A864DB20, 0x0A527FDF9, 0x0A1E6E04E,
	0x0BFA1B04B, 0x0BB60ADFC, 0x0B6238B25, 0x0B2E29692, 0x8AAD2B2F, 0x8E6C3698,
	0x832F1041, 0x87EE0DF6, 0x99A95DF3, 0x9D684044, 0x902B669D, 0x94EA7B2A, 0x0E0B41DE7,
	0x0E4750050, 0x0E9362689, 0x0EDF73B3E, 0x0F3B06B3B, 0x0F771768C, 0x0FA325055,
	0x0FEF34DE2, 0x0C6BCF05F, 0x0C27DEDE8, 0x0CF3ECB31, 0x0CBFFD686, 0x0D5B88683,
	0x0D1799B34, 0x0DC3ABDED, 0x0D8FBA05A, 0x690CE0EE, 0x6DCDFD59, 0x608EDB80,
	0x644FC637, 0x7A089632, 0x7EC98B85, 0x738AAD5C, 0x774BB0EB, 0x4F040D56, 0x4BC510E1,
	0x46863638, 0x42472B8F, 0x5C007B8A, 0x58C1663D, 0x558240E4, 0x51435D53, 0x251D3B9E,
	0x21DC2629, 0x2C9F00F0, 0x285E1D47, 0x36194D42, 0x32D850F5, 0x3F9B762C, 0x3B5A6B9B,
	0x315D626, 0x7D4CB91, 0x0A97ED48, 0x0E56F0FF, 0x1011A0FA, 0x14D0BD4D, 0x19939B94,
	0x1D528623, 0x0F12F560E, 0x0F5EE4BB9, 0x0F8AD6D60, 0x0FC6C70D7, 0x0E22B20D2,
	0x0E6EA3D65, 0x0EBA91BBC, 0x0EF68060B, 0x0D727BBB6, 0x0D3E6A601, 0x0DEA580D8,
	0x0DA649D6F, 0x0C423CD6A, 0x0C0E2D0DD, 0x0CDA1F604, 0x0C960EBB3, 0x0BD3E8D7E,
	0x0B9FF90C9, 0x0B4BCB610, 0x0B07DABA7, 0x0AE3AFBA2, 0x0AAFBE615, 0x0A7B8C0CC,
	0x0A379DD7B, 0x9B3660C6, 0x9FF77D71, 0x92B45BA8, 0x9675461F, 0x8832161A, 0x8CF30BAD,
	0x81B02D74, 0x857130C3, 0x5D8A9099, 0x594B8D2E, 0x5408ABF7, 0x50C9B640, 0x4E8EE645,
	0x4A4FFBF2, 0x470CDD2B, 0x43CDC09C, 0x7B827D21, 0x7F436096, 0x7200464F, 0x76C15BF8,
	0x68860BFD, 0x6C47164A, 0x61043093, 0x65C52D24, 0x119B4BE9, 0x155A565E, 0x18197087,
	0x1CD86D30, 0x29F3D35, 0x65E2082, 0x0B1D065B, 0x0FDC1BEC, 0x3793A651, 0x3352BBE6,
	0x3E119D3F, 0x3AD08088, 0x2497D08D, 0x2056CD3A, 0x2D15EBE3, 0x29D4F654, 0x0C5A92679,
	0x0C1683BCE, 0x0CC2B1D17, 0x0C8EA00A0, 0x0D6AD50A5, 0x0D26C4D12, 0x0DF2F6BCB,
	0x0DBEE767C, 0x0E3A1CBC1, 0x0E760D676, 0x0EA23F0AF, 0x0EEE2ED18, 0x0F0A5BD1D,
	0x0F464A0AA, 0x0F9278673, 0x0FDE69BC4, 0x89B8FD09, 0x8D79E0BE, 0x803AC667,
	0x84FBDBD0, 0x9ABC8BD5, 0x9E7D9662, 0x933EB0BB, 0x97FFAD0C, 0x0AFB010B1, 0x0AB710D06,
	0x0A6322BDF, 0x0A2F33668, 0x0BCB4666D, 0x0B8757BDA, 0x0B5365D03, 0x0B1F740B4,
};

CRC32Lookup::CRC32Lookup(){
    //precalculate the hashes for fast lookups
    int lenNames = sizeof(ZounaClassesNames)/sizeof(char*);
    for(int i=0;i<lenNames;i++){
        uint32_t hash = calculateCRC32(ZounaClassesNames[i]);
        m_map.insert(std::pair<uint32_t,ZounaClasses>(hash,(ZounaClasses)i));
    }
}

const char *CRC32Lookup::getClassName(ZounaClasses id){
    return ZounaClassesNames[id];
}

ZounaClasses CRC32Lookup::getClass(uint32_t crc){
    return m_map[crc];
}

uint32_t CRC32Lookup::calculateCRC32(std::string input){
    uint32_t hash = 0xffffffff;
    for(const char currChar : input)
        hash = hashSet2[(hash&0xff)^hashSet1[currChar]]^((hash) >>8);
    return (~hash);
}
CRC32Lookup::~CRC32Lookup(){};
